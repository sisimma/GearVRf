/* Copyright 2016 Samsung Electronics Co., LTD
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.gearvrf;

import android.view.MotionEvent;

/**
 * This interface defines events generated by picking
 * with a cursor controller. This interface is similar
 * to IPickEvents except that it also includes touch events.
 * @see GVRPicker
 * @see GVRCursorController
 * @see GVRPicker.GVRPickedObject
 */
public interface ITouchEvents extends IEvents
{
    /**
     * Called when the pick ray first enters a scene object.
     * @param sceneObj scene object picked
     * @param collision information about the collision
     */
    void onEnter(GVRSceneObject sceneObj, GVRPicker.GVRPickedObject collision);
    
    /**
     * Called when the pick ray first exits a scene object.
     * @param sceneObj scene object no longer picked.
     * @param collision information about the last collision before exit,
     *                  with previous hit location
     */
    void onExit(GVRSceneObject sceneObj, GVRPicker.GVRPickedObject collision);

    /**
     * Called when the scene object's collider is touched
     * (the pick ray penetrates and the action button is down).
     * @param sceneObj scene object touched
     * @param collision information about the collision
     */
    void onTouchStart(GVRSceneObject sceneObj, GVRPicker.GVRPickedObject collision);

    /**
     * Called when action button is up while the pick ray penetrates the scene object.
     * @param sceneObj scene object no longer picked.
     */
    void onTouchEnd(GVRSceneObject sceneObj, GVRPicker.GVRPickedObject collision);

    /**
     * Called while the pick ray penetrates a scene object.
     * The collision has the touch flag settings.
     * @param sceneObj scene object picked
     * @param collision information about the collision
     */    
    void onInside(GVRSceneObject sceneObj, GVRPicker.GVRPickedObject collision);
}
